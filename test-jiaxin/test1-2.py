def typeTriangle(a, b, c):
    if a == 1000 or b == 1000 or c == 1000:
        return "提示：请输入数据"
    if a <= 0 or a > 100 or b <= 0 or b > 100 or c <= 0 or c > 100 or isinstance(a, int)==False or isinstance(b, int)==False or isinstance(c, int)==False:
        return "提示：输入不符合要求"

    if a + b <= c or b + c <= a or a + c <= b:
        return "非三角形"
    if a == b and b == c:
        return "等边三角形"
    if a == b or b == c or a == c:
        return "等腰三角形"
    return "一般三角形"

list2 = [[1, 5, 6, 7, "一般三角形"],
         [2, 6, 6, 5, "等腰三角形"],
         [3, 6, 5, 6, "等腰三角形"],
         [4, 5, 6, 6, "等腰三角形"],
         [5, 6, 6, 6, "等边三角形"],
         [6, -5, 6, 6, "提示：输入不符合要求"],
         [7, 6, 0, 6, "提示：输入不符合要求"],
         [8, 6, 6, 3.6, "提示：输入不符合要求"],
         [9, 0, -5, 6, "提示：输入不符合要求"],
         [10, 5.6, 6, -2, "提示：输入不符合要求"],
         [11, 6, 0, 3.5, "提示：输入不符合要求"],
         [12, 3.5, 5.6, 4.5, "提示：输入不符合要求"],
         [13, 6, 1000, 1000, "提示：请输入数据"],
         [14, 1000, 5, 1000, "提示：请输入数据"],
         [15, 1000, 1000, 5, "提示：请输入数据"],
         [16, 6, 6, 1000, "提示：请输入数据"],
         [17, 6, 1000, 4, "提示：请输入数据"],
         [18, 1000, 5, 6, "提示：请输入数据"],
         [19, 1000, 1000, 1000, "提示：请输入数据"],
         [20, 5, 6, 15, "非三角形"],
         [21, 6, 7, 13, "非三角形"],
         [22, 4, 10, 5, "非三角形"],
         [23, 6, 10, 4, "非三角形"],
         [24, 5, 6, 15, "非三角形"],
         [25, 7, 8, 15, "非三角形"]]  #等价类测试用例，其中1000表示没输入

print("{:^12}{:^18}{:^18}{:^18}{:^18}".format("用例编号", "输入条件", "预期结果", "实际结果", "结论"))
for i in list2:
    temp = typeTriangle(i[1], i[2], i[3])
    conclusion = "fail"

    for j in range(len(i)):
        if i[j] == 1000:
            i[j] = "-"

    if temp == i[4]:
        conclusion = "pass"
    print("{:<18d}{:<6}{:<6}{:<6}{:<25}{:<25}{:<18}".format(i[0], i[1], i[2], i[3], i[4], temp, conclusion))
